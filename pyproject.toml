[tool.poetry]
name = "copier"
# This version is a placeholder autoupdated by poetry-dynamic-versioning
version = "0.0.0"
description = "A library for rendering project templates."
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8"
]
authors = ["Ben Felder <ben@felder.io>"]
homepage = "https://github.com/pykong/copier"
repository = "https://github.com/pykong/copier"
readme = "README.md"

[tool.poetry.scripts]
copier = "copier.cli:CopierApp.run"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/pykong/copier/issues"

[tool.poetry.dependencies]
python = "^3.6"
colorama = "^0.4.3"
jinja2 = "^2.11.2"
pathspec = "^0.8.0"
plumbum = "^1.6.9"
pydantic = "^1.5.1"
regex = "^2020.6.8"
pyyaml = "^5.3.1"
pyyaml-include = "^1.2"
# packaging is needed when installing from PyPI
packaging = "^20.4"
mkdocstrings = {version = "^0.13.1", optional = true}
mkdocs-material = {version = "^5.5.2", optional = true}

[tool.poetry.extras]
docs = ["mkdocstrings", "mkdocs-material"]

[tool.poetry.dev-dependencies]
black = {version = "^19.10b0", allow-prereleases = true}
flake8 = "*"
flake8-blind-except = "*"
flake8-bugbear = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
ipdb = "*"
mypy = "*"
packaging = "*"
poethepoet = "^0.7.0"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
pytest-timeout = "^1.4.1"

# HACK https://github.com/python-poetry/poetry/issues/2555
# TODO Remove from this section and install with poetry install -E docs when fixed
mkdocstrings = "^0.13.1"
mkdocs-material = "^5.5.5"

[tool.poe.tasks]
clean.script = "devtasks:clean"
clean.help = "remove build/python artifacts"

docs = "mkdocs serve"

test.cmd = "pytest -n auto --color=yes"
test.help = "run tests"

lint.cmd = "pre-commit run --all-files"
lint.help = "check (and auto-fix) style with pre-commit"

types.cmd = "mypy --ignore-missing-imports ."
types.help = "run the type (mypy) checker on the codebase"

coverage.cmd = "pytest --cov-report html --cov copier copier tests"
coverage.help = "generate an HTML report of the coverage"

[tool.poetry-dynamic-versioning]
enable = true
style = "semver"
vcs = "git"

[tool.black]
line-length = 88
target-version = ['py36']

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["copier"]
line_length = 88
multi_line_output = 3  # black interop
use_parentheses = true

[flake8]
max-complexity = 20
ignore = ",W503,E203,E501,D100,D101,D102,D103,D104,D105,D107,"

[build-system]
requires = ["poetry>=1.0.3"]
build-backend = "poetry.masonry.api"
