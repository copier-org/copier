[tool.poetry]
name = "copier"
# This version is a placeholder autoupdated by poetry-dynamic-versioning
version = "0.0.0"
description = "A library for rendering project templates."
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8"
]
authors = ["Ben Felder <ben@felder.io>"]
homepage = "https://github.com/pykong/copier"
repository = "https://github.com/pykong/copier"
readme = "README.md"

[tool.poetry.scripts]
copier = "copier.cli:CopierApp.run"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/pykong/copier/issues"

[tool.poetry.dependencies]
python = ">=3.6.1,<3.10"
colorama = "^0.4.3"
iteration_utilities = "^0.10.1"
jinja2 = "^2.11.2"
pathspec = "^0.8.0"
plumbum = "^1.6.9"
pydantic = "^1.7.2"
Pygments = "^2.7.1"
questionary = "^1.8.1"
pyyaml = "^5.3.1"
pyyaml-include = "^1.2"
# packaging is needed when installing from PyPI
packaging = "^20.4"
mkdocstrings = {version = "^0.13.1", optional = true}
mkdocs-material = {version = "^5.5.2", optional = true}
mkdocs-mermaid2-plugin = {version = "^0.5.0", optional = true}

[tool.poetry.extras]
docs = ["mkdocstrings", "mkdocs-material", "mkdocs-mermaid2-plugin"]

[tool.poetry.dev-dependencies]
autoflake = "^1.4"
black = "^20.8b1"
flake8 = "^3.8.4"
flake8-bugbear = "^20.1.4"
flake8-comprehensions = "^3.2.3"
flake8-debugger = "^3.2.1"
mypy = "^0.790"
pexpect = "^4.8.0"
poethepoet = "^0.9.0"
pre-commit = "^2.7.1"
pytest = "^6.1.1"
pytest-cov = "^2.10.1"
pytest-xdist = "^2.1.0"

[tool.poe.tasks.clean]
script = "devtasks:clean"
help = "remove build/python artifacts"

[tool.poe.tasks.coverage]
cmd = "pytest --cov-report html --cov copier copier tests"
help = "generate an HTML report of the coverage"

[tool.poe.tasks.docs]
cmd = "mkdocs serve"
help = "start local docs server"

[tool.poe.tasks.lint]
cmd = "pre-commit run --all-files"
help = "check (and auto-fix) style with pre-commit"

[tool.poe.tasks.test]
cmd = "pytest --color=yes"
help = "run tests"

[tool.poe.tasks.types]
cmd = "mypy --ignore-missing-imports ."
help = "run the type (mypy) checker on the codebase"

[tool.poetry-dynamic-versioning]
enable = true
style = "semver"
vcs = "git"

[tool.black]
line-length = 88
target-version = ['py36']

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["copier"]
line_length = 88
multi_line_output = 3  # black interop
use_parentheses = true

[flake8]
max-complexity = 20
ignore = ",W503,E203,E501,D100,D101,D102,D103,D104,D105,D107,"

[build-system]
requires = ["poetry_core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"
